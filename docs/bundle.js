!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const r=new class{constructor(e){this.device=null,this.filters=e.filters||[{vendorId:10755,productId:32832}]}enable(){return navigator.usb.requestDevice({filters:this.filters}).then(e=>{this.device=e})}getPairedDevice(){return navigator.usb.getDevices().then(e=>e[0])}autoconnect(){return this.getPairedDevice().then(e=>(this.device=e,this.connect()))}connect(){return this.device.open().then(()=>{if(null===this.device.configuration)return this.device.selectConfiguration(1)}).then(()=>this.device.claimInterface(2)).then(()=>this.device.controlTransferOut({requestType:"class",recipient:"interface",request:34,value:1,index:2})).catch(e=>console.log(e))}send(e){const t=e.concat(new Array(512).fill(0).slice(e.length,512)),n=Uint8Array.from(t);return this.device.transferOut(4,n)}disconnect(){return this.device.controlTransferOut({requestType:"class",recipient:"interface",request:34,value:1,index:2}).then(()=>this.device.close())}}({}),o=new class{constructor(e){this.universe=e.universe||new Array(512).fill(0)}update(e,t){return new Promise((n,r)=>{if(e-=1,Number.isInteger(t))this.universe.splice(e,1,t);else{if(!Array.isArray(t))return r(new Error("Could not update channel because value is not of type Integer or Array"));this.universe.splice(e,t.length,...t)}return n(this.universe)})}}({}),i=new class{constructor(){this.output=document.getElementById("console")}log(e,t,n){let r="";switch(n){case"USBDevice":r=`${e}: ${t}`;break;case"array":r=e+" "+JSON.stringify(t);break;case"keyvalue":r=`${e}: ${t}`;break;default:r=e+" "+t}console.log(r);let o=document.createElement("span");o.innerHTML=r,this.output.appendChild(o)}}({}),c=document.getElementById("activateWebUsb"),s=document.getElementById("disconnectWebUsb"),a=document.getElementById("changeColor"),l=document.getElementById("changeDimmer"),u=document.getElementById("changeUv"),d=document.getElementById("changeStrobe"),v=e=>{i.log("---","","string"),i.log("Selected device",e.productName,"USBDevice"),i.log("---","","string");const{configuration:t,configurations:n,deviceClass:r,deviceProtocol:o,deviceSubclass:c,deviceVersionMajor:s,deviceVersionMinor:a,deviceVersionSubminor:l,manufacturerName:u,opened:d,productId:v,productName:g,serialNumber:f,usbVersionMajor:h,usbVersionMinor:p,usbVersionSubminor:m,vendorId:y}=e;i.log("Opened",d,"keyvalue"),i.log("Vendor ID",y,"keyvalue"),i.log("Manufacturer Name",u,"keyvalue"),i.log("Product ID",v,"keyvalue"),i.log("Product Name",g,"keyvalue"),i.log("Serialnumber",f,"keyvalue"),i.log("Device Class",r,"keyvalue"),i.log("Device Protocol",o,"keyvalue"),i.log("Device Subclass",c,"keyvalue"),i.log("Device Version Major",s,"keyvalue"),i.log("Device Version Minor",a,"keyvalue"),i.log("Device Version Subminor",l,"keyvalue"),i.log("USB Version Major",h,"keyvalue"),i.log("USB Version Minor",p,"keyvalue"),i.log("USB Version Subminor",m,"keyvalue"),i.log("---","","string")};r.autoconnect().then(()=>{v(r.device)}),c.addEventListener("click",e=>{r.enable().then(()=>{r.connect().then(()=>{v(r.device)})})}),s.addEventListener("click",e=>{r.disconnect()});const g=(e,t)=>o.update(e,t).then(e=>(i.log("Universe:",e,"array"),r.send(e)));a.addEventListener("change",e=>{let t=e.target.value.match(/[A-Za-z0-9]{2}/g).map(e=>parseInt(e,16));i.log(`Set Color on Channel 1 - 3 to ${t}`,"","string"),g(1,t)}),u.addEventListener("change",e=>{let t=parseInt(e.target.value,10);i.log(`Set UV on Channel 4 to ${t}`,"","string"),g(4,t)}),l.addEventListener("change",e=>{let t=parseInt(e.target.value,10);i.log(`Set Dimmer on Channel 5 to ${t}`,"","string"),g(5,t)}),d.addEventListener("change",e=>{let t=parseInt(e.target.value,10);i.log(`Set Strobe on Channel 6 to ${t}`,"","string"),g(6,t)})}])});
//# sourceMappingURL=bundle.js.map